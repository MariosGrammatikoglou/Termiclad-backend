// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  groupChats GroupChat[]  @relation("UserGroupChats") 
  messagesSent Message[]  @relation("SentMessages")
  messagesReceived Message[] 
  groupMembers GroupMember[] 
}


model GroupChat {
  id          Int           @id @default(autoincrement())
  name        String
  createdBy   User          @relation("UserGroupChats", fields: [createdById], references: [id]) // Reverse relation for createdBy
  createdById Int
  members     GroupMember[]
  messages    Message[]     @relation("GroupChatMessages") // Reverse relation for messages
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model GroupMember {
  id        Int       @id @default(autoincrement())
  group     GroupChat @relation(fields: [groupId], references: [id])
  groupId   Int
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  joinedAt  DateTime  @default(now())
}

model Message {
  id         Int       @id @default(autoincrement())
  sender     User      @relation("SentMessages", fields: [senderId], references: [id])
  senderId   Int
  receiver   User      @relation("ReceivedMessages", fields: [receiverId], references: [id])
  receiverId Int
  content    String
  groupChat  GroupChat @relation("GroupChatMessages", fields: [groupChatId], references: [id]) // Reverse relation for group chat
  groupChatId Int
  createdAt  DateTime  @default(now())
}
